<!DOCTYPE html>
<html class="h-full">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= name %> - Reset Password</title>
  <link href="/assets/tailwind.css" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://api.fontshare.com/v2/css?f[]=general-sans@500,300,600,400,700&display=swap" rel="stylesheet">
</head>
<body style="font-family: 'General Sans'" class="bg-[#141414] h-full">
<div class="min-h-full flex">
  <div class="flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24">
    <div class="mx-auto w-full max-w-sm lg:w-96">
      <div>
        <% if (logo == true) { %><img class="h-12 w-auto" src="../assets/logo.png"> <% } %>
        <h2 class="<% if (logo == true) { %>mt-6<% } %> text-3xl font-medium text-white">Reset password</h2>
        <p class="mt-2 text-sm text-neutral-500">
          Please enter a new password below.
        </p>
      </div>
      <div class="mt-8">
        <div class="mt-6">
          <form action="/auth/reset/<%= token %>" method="POST" class="space-y-6" id="resetPasswordForm">
            <div>
              <label for="password" class="block text-sm font-medium text-neutral-400"> New Password </label>
              <div class="mt-1 relative">
                <input placeholder="********" id="password" name="password" type="password" autocomplete="new-password" required minlength="8" class="appearance-none block w-full px-3 py-2 bg-white/10 border border-transparent rounded-xl placeholder-neutral-500 focus:outline-none focus:ring-neutral-500 focus:border-neutral-500 text-white transition sm:text-sm">
                <span id="togglePassword1" class="eye-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </span>
              </div>
            </div>
            <div>
              <label for="confirm-password" class="block text-sm font-medium text-neutral-400"> Confirm Password </label>
              <div class="mt-1 relative">
                <input placeholder="********" id="confirm-password" name="confirm-password" type="password" autocomplete="new-password" required minlength="8" class="appearance-none block w-full px-3 py-2 bg-white/10 border border-transparent rounded-xl placeholder-neutral-500 focus:outline-none focus:ring-neutral-500 focus:border-neutral-500 text-white transition sm:text-sm">
                <span id="togglePassword2" class="eye-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </span>
              </div>
            </div>
            <div id="password-strength-label" class="strength-label">0%</div>
            <div class="password-strength-meter mt-2">
              <div id="password-strength-bar" class="password-strength-bar"></div>
            </div>
            <div>
              <button type="submit" class="w-full cursor-pointer flex justify-center py-2 px-4 border border-transparent rounded-xl shadow-sm text-sm font-medium text-neutral-800 bg-white hover:bg-neutral-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neutral-500">Reset Password</button>
            </div>

            <% if (req.query.err && req.query.err === "InvalidToken") { %>
              <div class="mt-2"></div>
              <span class="text-amber-600 pt-4 font-normal text-sm">Invalid or expired password reset token. Please try again.</span>
            <% } %>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="hidden lg:block relative w-0 flex-1">
    <img class="absolute inset-0 h-full w-full object-cover" src="https://i.imgur.com/IYpZHWi.jpeg" alt="">
  </div>
</div>
<div>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.getElementById('resetPasswordForm');
      const password = document.getElementById('password');
      const confirmPassword = document.getElementById('confirm-password');
      const passwordMeter = document.getElementById('password-strength-bar');
      const passwordLabel = document.getElementById('password-strength-label');
      const togglePassword1 = document.getElementById('togglePassword1');
      const togglePassword2 = document.getElementById('togglePassword2');

      togglePassword1.addEventListener('click', function () {
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
      });

      togglePassword2.addEventListener('click', function () {
        const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPassword.setAttribute('type', type);
      });

      form.addEventListener('input', function () {
        const passwordValue = password.value;
        const confirmValue = confirmPassword.value;

        const passwordStrength = calculatePasswordStrength(passwordValue);
        passwordMeter.style.width = `${passwordStrength * 100}%`;
        updateStrengthMeter(passwordMeter, passwordStrength);
        updateStrengthLabel(passwordLabel, passwordStrength);

        if (passwordValue !== confirmValue) {
          confirmPassword.setCustomValidity("Passwords do not match");
        } else {
          confirmPassword.setCustomValidity("");
        }
      });

      function calculatePasswordStrength(password) {
        let strength = 0;

        if (password.length >= 8) {
          strength += 0.5;
        }

        if (/\d/.test(password)) {
          strength += 0.3;
        }

        if (/[$-/:-?{-~!"^_`\[\]]/.test(password)) {
          strength += 0.2;
        }

        return strength;
      }

      function updateStrengthMeter(meter, strength) {
        meter.className = 'password-strength-bar';
        if (strength < 0.5) {
          meter.classList.add('strength-weak');
        } else if (strength < 0.8) {
          meter.classList.add('strength-medium');
        } else {
          meter.classList.add('strength-strong');
        }
      }

      function updateStrengthLabel(label, strength) {
        const percentage = Math.round(strength * 100);
        label.textContent = `${percentage}%`;
      }
    });
  </script>
</div>
</body>
</html>
