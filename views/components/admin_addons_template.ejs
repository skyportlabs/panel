<!doctype html>
<html class="h-full w-full">
   <head>
      <title><%= name %></title>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link href="/assets/tailwind.css" rel="stylesheet">
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link rel="preconnect" href="https://cdn.fontshare.com">
      <link href="https://api.fontshare.com/v2/css?f[]=general-sans@500,300,600,400,700&display=swap" rel="stylesheet">
      <link href="https://fonts.cdnfonts.com/css/graphik-trial" rel="stylesheet">
   </head>
   <body style="font-family: 'General Sans" class="bg-[#141414] h-full w-full">
      <div>
      <style>
         .collapsed span {
         display: none;
         }
         .collapsed p {
         display: none;
         }
         .collapsed h1 {
         display: none;
         }
         .collapsed .nav-link svg {
         margin-right: 0;
         }
         .collapsed {
         width: 4% !important;
         }
         .colcont {
         padding-left: 4.2rem
         }
         .transition {
         transition: all 0.3s ease-in-out;
         }
         .sidebar nav ul {
         position: relative;
         }
         #active-background {
         position: absolute;
         left: 1rem; /* Adjust based on your layout */
         width: calc(100% - 2rem); /* Adjust based on your layout */
         height: 2.25rem; /* Adjust based on your nav item height */
         background-color: #171717;
         border-radius: 0.5rem;
         transition: transform 0.2s ease-in-out;
         z-index: 0;
         }
         .nav-link {
         position: relative;
         z-index: 1;
         }
         .nav-link.active {
         color: white;
         font-weight: 500;
         }
      </style>
      <script>
         document.addEventListener('DOMContentLoaded', () => {
             const sidebar = document.querySelector('.sidebar');
             const toggleButton = document.getElementById('sidebar-toggle');
             const colcont = document.getElementById('colcont');
         
             function setCookie(name, value, days) {
                 const date = new Date();
                 date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                 const expires = "expires=" + date.toUTCString();
                 document.cookie = name + "=" + value + ";" + expires + ";path=/";
             }
             function getCookie(name) {
                 const nameEQ = name + "=";
                 const ca = document.cookie.split(';');
                 for(let i = 0; i < ca.length; i++) {
                     let c = ca[i];
                     while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                     if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
                 }
                 return null;
             }
             const sidebarState = getCookie('sidebar-collapsed');
             if (sidebarState === 'true') {
                 sidebar.classList.add('collapsed');
                 colcont.classList.add('colcont');
             } else {
                 sidebar.classList.remove('collapsed');
                 colcont.classList.remove('colcont');
             }
             toggleButton.addEventListener('click', () => {
                 sidebar.classList.toggle('collapsed');
                 colcont.classList.toggle('colcont');
                 const isCollapsed = sidebar.classList.contains('collapsed');
                 setCookie('sidebar-collapsed', isCollapsed, 7);
             });
         });
      </script>
      <script>
         document.addEventListener('DOMContentLoaded', () => {
             const loader = document.getElementById('loader');
             const content = document.getElementById('content');
         
             setTimeout(() => {
                 loader.classList.add('opacity-0');
                 content.classList.remove('opacity-0');
                 
                 setTimeout(() => {
                     loader.style.display = 'none';
                 }, 150);
             }, 300);
         });
      </script>
      <!-- Static sidebar for desktop -->
      <div class="sidebar transition hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-56 lg:flex-col">
        <div class="flex grow flex-col gap-y-5 overflow-hidden bg-[#101010] border-r border-white/5">
           <nav class="flex flex-1 flex-col">
              <div class="pl-6 pt-5 pb-4 flex">
                 <a href="/" class="flex">
                    <% if (logo == true) { %>
                    <img src="../assets/logo.png" class="h-7 w-7 rounded mr-3 inline-flex">
                     <% } %>
                     <h1 class="text-white font-medium tracking-tight text-lg"><%= name %></h1>
                  </a>
               </div>
               <ul role="list" class="flex flex-1 flex-col gap-y-7">
                  <li>
                     <ul role="list" class="-mx-2 space-y-1">
                        <div id="active-background" class="absolute left-0 w-full h-8 bg-[#171717] rounded-2xl transition-all duration-300 ease-in-out"></div>
                        <li>
                          <a href="/admin/overview" class="transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 shadow-none py-1.5 rounded-xl shadow-sm text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M9 15 3 9m0 0 6-6M3 9h12a6 6 0 0 1 0 12h-3" />
                            </svg>                                                              
                            Go Back
                          </a>
                        </li>
                        <li>
                          <a href="/admin/plugins" class="transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 shadow-none py-1.5 rounded-xl shadow-sm text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 mt-0.5 h-5">
                              <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v2.5A2.25 2.25 0 0 0 4.25 9h2.5A2.25 2.25 0 0 0 9 6.75v-2.5A2.25 2.25 0 0 0 6.75 2h-2.5Zm0 9A2.25 2.25 0 0 0 2 13.25v2.5A2.25 2.25 0 0 0 4.25 18h2.5A2.25 2.25 0 0 0 9 15.75v-2.5A2.25 2.25 0 0 0 6.75 11h-2.5Zm9-9A2.25 2.25 0 0 0 11 4.25v2.5A2.25 2.25 0 0 0 13.25 9h2.5A2.25 2.25 0 0 0 18 6.75v-2.5A2.25 2.25 0 0 0 15.75 2h-2.5Zm0 9A2.25 2.25 0 0 0 11 13.25v2.5A2.25 2.25 0 0 0 13.25 18h2.5A2.25 2.25 0 0 0 18 15.75v-2.5A2.25 2.25 0 0 0 15.75 11h-2.5Z" clip-rule="evenodd" />
                            </svg>                                               
                            Overview
                          </a>
                        </li>
          
                        <p class="pl-8 text-neutral-400 text-xs font-semibold pt-6 pb-2">Plugins</p>
                        <% Object.keys(pluginsidebar).forEach(plugin => { %>
                        <li>
                          <a href="<%= pluginsidebar[plugin] %>" class="transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 shadow-none py-1.5 rounded-xl shadow-sm text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 mt-0.5 h-5">
                              <path d="M11.25 5.337c0-.355-.186-.676-.401-.959a1.647 1.647 0 0 1-.349-1.003c0-1.036 1.007-1.875 2.25-1.875S15 2.34 15 3.375c0 .369-.128.713-.349 1.003-.215.283-.401.604-.401.959 0 .332.278.598.61.578 1.91-.114 3.79-.342 5.632-.676a.75.75 0 0 1 .878.645 49.17 49.17 0 0 1 .376 5.452.657.657 0 0 1-.66.664c-.354 0-.675-.186-.958-.401a1.647 1.647 0 0 0-1.003-.349c-1.035 0-1.875 1.007-1.875 2.25s.84 2.25 1.875 2.25c.369 0 .713-.128 1.003-.349.283-.215.604-.401.959-.401.31 0 .557.262.534.571a48.774 48.774 0 0 1-.595 4.845.75.75 0 0 1-.61.61c-1.82.317-3.673.533-5.555.642a.58.58 0 0 1-.611-.581c0-.355.186-.676.401-.959.221-.29.349-.634.349-1.003 0-1.035-1.007-1.875-2.25-1.875s-2.25.84-2.25 1.875c0 .369.128.713.349 1.003.215.283.401.604.401.959a.641.641 0 0 1-.658.643 49.118 49.118 0 0 1-4.708-.36.75.75 0 0 1-.645-.878c.293-1.614.504-3.257.629-4.924A.53.53 0 0 0 5.337 15c-.355 0-.676.186-.959.401-.29.221-.634.349-1.003.349-1.036 0-1.875-1.007-1.875-2.25s.84-2.25 1.875-2.25c.369 0 .713.128 1.003.349.283.215.604.401.959.401a.656.656 0 0 0 .659-.663 47.703 47.703 0 0 0-.31-4.82.75.75 0 0 1 .83-.832c1.343.155 2.703.254 4.077.294a.64.64 0 0 0 .657-.642Z" />
                            </svg>                                                               
                            <%= plugin %>
                          </a>
                        </li>
                        <% }) %>
                     </ul>
                  </li>
                  <!--<li>
                     <div class="text-xs font-medium leading-6 text-neutral-400">Your teams</div>
                     <ul role="list" class="-mx-2 mt-2 space-y-1">
                       <li>
                         <a href="#" class="text-neutral-400 hover:text-white hover:bg-neutral-800 group flex gap-x-3 rounded-xl p-2 text-sm leading-6 font-medium">
                           <span class="flex h-6 w-6 shrink-0 items-center justify-center rounded-xl border border-neutral-700 bg-neutral-800 text-[0.625rem] font-medium text-neutral-400 group-hover:text-white">H</span>
                           <span class="truncate">Heroicons</span>
                         </a>
                       </li>
                       <li>
                         <a href="#" class="text-neutral-400 hover:text-white hover:bg-neutral-800 group flex gap-x-3 rounded-xl p-2 text-sm leading-6 font-medium">
                           <span class="flex h-6 w-6 shrink-0 items-center justify-center rounded-xl border border-neutral-700 bg-neutral-800 text-[0.625rem] font-medium text-neutral-400 group-hover:text-white">T</span>
                           <span class="truncate">Tailwind Labs</span>
                         </a>
                       </li>
                       <li>
                         <a href="#" class="text-neutral-400 hover:text-white hover:bg-neutral-800 group flex gap-x-3 rounded-xl p-2 text-sm leading-6 font-medium">
                           <span class="flex h-6 w-6 shrink-0 items-center justify-center rounded-xl border border-neutral-700 bg-neutral-800 text-[0.625rem] font-medium text-neutral-400 group-hover:text-white">W</span>
                           <span class="truncate">Workcation</span>
                         </a>
                       </li>
                     </ul>
                     </li> -->
                     <li class="mt-auto border-t border-white/5">
                      <a href="/auth/logout" class="group -mx-2 flex gap-x-3 rounded-xl pl-6 py-4 text-sm font-medium leading-6 text-neutral-500 transition hover:text-white">
                         <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15m-3 0-3-3m0 0 3-3m-3 3H15" />
                         </svg>
                         <span><%= req.translations.signOut %></span>
                      </a>
                   </li>
                </ul>
             </nav>
          </div>
       </div>
       <div id="colcont" class="lg:pl-56">
       <div class="sticky backdrop-blur top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 bg-transparent px-4 shadow-sm sm:gap-x-6 sm:px-4 lg:px-4">
          <button type="button" id="sidebar-toggle" class="w-fit p-2 mt-1 rounded-xl text-white border border-white/5 hover:scale-110 active:scale-100 duration-200">
             <span class="sr-only">Open sidebar</span>
             <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
             </svg>
          </button>
          <div class="flex flex-1 gap-x-4 self-stretch lg:gap-x-6">
             <div class="relative flex flex-1 flex-col">
                <div class="flex items-center w-fit mt-3.5 px-4 py-2 h-10  rounded-xl border border-white/5  active:scale-100 duration-200 bg-transparent text-white">
                   <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-5 w-5 text-neutral-400">
                      <path fill-rule="evenodd" d="M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z" clip-rule="evenodd" />
                   </svg>
                   <input id="searchInput" 
                      class="bg-transparent border-transparent focus-visible:ring-transparent border-none ring-transparent sm:text-sm placeholder:text-zinc-500" 
                      placeholder="<%= req.translations.search %>" 
                      type="search" 
                      name="search"
                      autocomplete="off"
                      onclick="input.blur()"
                      onfocus="showSearchResults()">
                </div>
                <div id="searchResults" class="absolute bg-white w-[12.5rem] rounded-xl shadow-lg hidden mt-20 px-2 pb-2">
                </div>
             </div>
             <script src="/javascript/search/index.js"></script>
             <script>
                document.addEventListener('keydown', function(event) {
                  if (event.key === 'F1') {
                    event.preventDefault();
                    document.getElementById('searchInput').focus();
                  }
                });
                
                function showSearchResults() {
                  document.getElementById('searchResults').classList.remove('hidden');
                }
                
                document.getElementById('searchInput').addEventListener('focus', showSearchResults);
             </script>
             <script>
                function showSearchResults() {
                    var searchResults = document.getElementById('searchResults');
                    searchResults.classList.remove('hidden');
                }
                
                document.addEventListener('click', function(event) {
                    var searchInput = document.getElementById('searchInput');
                    var searchResults = document.getElementById('searchResults');
                    if (!searchInput.contains(event.target) && !searchResults.contains(event.target)) {
                        searchResults.classList.add('hidden');
                    }
                });
             </script>
 
 
 <div class="flex items-center gap-x-4 lg:gap-x-6">
    <!-- Profile dropdown -->
    <div class="relative mt-3 mr-4">
      <button type="button" class="-m-1.5 flex items-center p-1.5" id="user-menu-button" aria-expanded="false" aria-haspopup="true" onclick="toggleDropdown()">
        <img class="h-8 w-8 rounded-lg bg-transparent" src="https://api.dicebear.com/9.x/thumbs/svg?seed=<%= user.username %>" alt="">
        <span class="hidden lg:flex lg:items-center ml-2.5 text-sm font-medium leading-6 text-white" aria-hidden="true">
          <%= user.username %>
          <span class="font-mono text-xs text-zinc-300 font-normal ml-1">(<%= user.userId.substring(0, 6) %>)</span>
        </span>
      </button>
      <div id="dropdown-menu" class="hidden absolute right-0 z-10 mt-2 w-56 bg-white rounded-2xl shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none pb-2">
        <div class="py-2 px-4">
          <p class="text-sm font-medium text-gray-700 mt-2">Theme</p>
          <div class="flex space-x-4 mt-2">
            <button class="p-2 bg-gray-200 rounded-full hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" aria-label="Sun Theme">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 256 256">
                <path d="M120,40V16a8,8,0,0,1,16,0V40a8,8,0,0,1-16,0Zm8,24a64,64,0,1,0,64,64A64.07,64.07,0,0,0,128,64ZM58.34,69.66A8,8,0,0,0,69.66,58.34l-16-16A8,8,0,0,0,42.34,53.66Zm0,116.68-16,16a8,8,0,0,0,11.32,11.32l16-16a8,8,0,0,0-11.32-11.32ZM192,72a8,8,0,0,0,5.66-2.34l16-16a8,8,0,0,0-11.32-11.32l-16,16A8,8,0,0,0,192,72Zm5.66,114.34a8,8,0,0,0-11.32,11.32l16,16a8,8,0,0,0,11.32-11.32ZM48,128a8,8,0,0,0-8-8H16a8,8,0,0,0,0,16H40A8,8,0,0,0,48,128Zm80,80a8,8,0,0,0-8,8v24a8,8,0,0,0,16,0V216A8,8,0,0,0,128,208Zm112-88H216a8,8,0,0,0,0,16h24a8,8,0,0,0,0-16Z"></path>
              </svg>
            </button>
            <button class="p-2 bg-gray-200 rounded-full hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" aria-label="Moon Theme">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" viewBox="0 0 256 256">
                <path d="M240,96a8,8,0,0,1-8,8H216v16a8,8,0,0,1-16,0V104H184a8,8,0,0,1,0-16h16V72a8,8,0,0,1,16,0V88h16A8,8,0,0,1,240,96ZM144,56h8v8a8,8,0,0,0,16,0V56h8a8,8,0,0,0,0-16h-8V32a8,8,0,0,0-16,0v8h-8a8,8,0,0,0,0,16Zm65.14,94.33A88.07,88.07,0,0,1,105.67,46.86a8,8,0,0,0-10.6-9.06A96,96,0,1,0,218.2,160.93a8,8,0,0,0-9.06-10.6Z"></path>
              </svg>
            </button>
            <button class="p-2 bg-gray-200 rounded-full hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" aria-label="Monitor Theme">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" fill="currentColor" viewBox="0 0 256 256">
                <path d="M232,64V176a24,24,0,0,1-24,24H48a24,24,0,0,1-24-24V64A24,24,0,0,1,48,40H208A24,24,0,0,1,232,64ZM160,216H96a8,8,0,0,0,0,16h64a8,8,0,0,0,0-16Z"></path>
              </svg>
            </button>
          </div>
        </div>
        <div class="border-t border-gray-200 my-2 mt-2 mb-2"></div>
        <div class="py-1 px-4">
          <label for="language-selector" class="block text-sm font-medium text-gray-700">Language</label>
          <select id="language-selector" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm" onchange="changeLanguage(this.value)">
            <option value="de">Deutsch</option>
            <option value="en">English</option>
            <option value="nl">Nederlands</option>
          </select>
        </div>
      </div>
    </div>
  </div>
  
  <script>
    function toggleDropdown() {
      const dropdownMenu = document.getElementById('dropdown-menu');
      dropdownMenu.classList.toggle('hidden');
    }
  
    // Optional: Close the dropdown when clicking outside
    window.addEventListener('click', function(e) {
      const userMenuButton = document.getElementById('user-menu-button');
      const dropdownMenu = document.getElementById('dropdown-menu');
      if (!userMenuButton.contains(e.target) && !dropdownMenu.contains(e.target)) {
        dropdownMenu.classList.add('hidden');
      }
    });
  </script>
          </div>
       </div>
       <script>
 document.addEventListener('DOMContentLoaded', function() {
   const navLinks = document.querySelectorAll('.nav-link');
   const activeBackground = document.getElementById('active-background');
   const contentSection = document.getElementById('content');
   let isAnimating = false;
 
   function updateActiveLink(currentPath) {
     navLinks.forEach((link) => {
       if (link.getAttribute('href') === currentPath) {
         link.classList.add('active');
         const linkRect = link.getBoundingClientRect();
         const navRect = link.closest('ul').getBoundingClientRect();
         activeBackground.style.transform = `translateY(${linkRect.top - navRect.top}px)`;
       } else {
         link.classList.remove('active');
       }
     });
   }
 
   function animatePageTransition(href) {
     if (isAnimating) return;
     isAnimating = true;
 
     contentSection.style.opacity = '0';
     contentSection.style.transform = 'translateX(-20px)';
 
     setTimeout(() => {
       window.location.href = href;
     }, 300);
   }
 
   navLinks.forEach(link => {
     link.addEventListener('click', (e) => {
       e.preventDefault();
       const href = link.getAttribute('href');
       animatePageTransition(href);
     });
   });
 
   // Update active link on page load
   updateActiveLink(window.location.pathname);
 
   // Handle browser back/forward
   window.addEventListener('popstate', () => {
     updateActiveLink(window.location.pathname);
   });
 });
       </script>
           <script>
             function changeLanguage(lang) {
                 fetch(`/setLanguage?lang=${lang}`)
                     .then(response => response.json())
                     .then(data => {
                         if (data.success) {
                             location.reload();
                         } else {
                             alert('Failed to change language');
                         }
                     });
             }
         </script>
 
       <div id="loader" class="fixed ml-56 mt-16 inset-0 flex items-center justify-center bg-[#141414] transition-opacity duration-300 opacity-100 z-50">
          <svg class="animate-spin h-5 w-5 text-white inline-flex"
             xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
             <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor"
                stroke-width="4"></circle>
             <path class="opacity-75" fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
             </path>
          </svg>
       </div>